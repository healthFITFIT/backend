plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    google()  // 구글 리포지토리 추가
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    implementation 'org.springframework.security:spring-security-oauth2-core:5.8.0'
    implementation 'com.google.api-client:google-api-client:1.34.1'
    implementation 'com.google.http-client:google-http-client-gson:1.41.0'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'mysql:mysql-connector-java:8.0.33'
    implementation 'com.google.http-client:google-http-client-jackson2:1.40.1'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'io.jsonwebtoken:jjwt:0.12.6'
}

tasks.named('test') {
    useJUnitPlatform()
}

processResources.dependsOn('copyModule')

tasks.register('copyModule', Copy) {
    copy {
        from './submodule'
        include '*.properties'
        into './src/main/resources'
    }
}